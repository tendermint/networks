version: 2

aliases:
  # Docker images
  - &TERRAGRUNT tendermintdev/terragrunt
  - &PYTHON python:3.7.2-alpine3.9
  - &GOLANG circleci/golang:1.11.5

golang: &golang
  docker:
    - image: *GOLANG
  working_directory: /go/src/github.com/cosmos
  environment:
    AWS_DEFAULT_REGION: us-east-1

python: &python
  docker:
    - image: *PYTHON

terragrunt: &terragrunt
  docker:
    - image: *TERRAGRUNT
  environment:
    AWS_REGION: us-east-1

network: &network
  run:
    name: Applying network configuration
    command: |
      cd testnet-kitchen/conf/network

      apply_config
      rm ~/plan.output

ecs: &ecs
  run:
    name: Applying ecs configuration
    command: |
      export FILES_FOLDER=testnet-kitchen/src/ecs/files

      if [[ -z ${CONFIG_TOML} ]]; then
        echo "Using default config.toml"
        mv $FILES_FOLDER/config.toml.default $FILES_FOLDER/config.toml
      else
        echo $CONFIG_TOML > $FILES_FOLDER/config.toml
      fi

      cd testnet-kitchen/conf/ecs

      apply_config
      rm ~/plan.output

tools_defaults: &tools_defaults
  working_directory: /go/src/github.com/tendermint/networks
  docker:
    - image: circleci/golang:1.11.5
  environment:
    GOBIN: /tmp/workspace/bin

jobs:
  build:
    <<: *terragrunt
    steps:
      - checkout
      - *network
      - *ecs
    
  tools_setup_dependencies:
    <<: *tools_defaults
    steps:
      - run: mkdir -p /tmp/workspace/bin
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: Get dependencies
          command: |
            export PATH="${GOBIN}:${PATH}"
            make get-deps
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /go/pkg
      - save_cache:
          key: v1-tree-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /go/src/github.com/tendermint/networks

  tools_lint:
    <<: *tools_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - restore_cache:
          key: v1-pkg-cache
      - restore_cache:
          key: v1-tree-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: |
            export PATH="${GOBIN}:${PATH}"
            make lint

  tools_test:
    <<: *tools_defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - restore_cache:
          key: v1-pkg-cache
      - restore_cache:
          key: v1-tree-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Test
          command: |
            export PATH="${GOBIN}:${PATH}"
            make test

  build_gaia_sim_image:
    <<: *golang
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build simulation image
          command: |
            cd testnet-kitchen/src/simulation/docker/gaia_simulation
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
            docker build -t tendermintdev/gaia_sim .
            docker push tendermintdev/gaia_sim

  run_simulation:
    <<: *python
    steps:
      - checkout
      - run:
          name: Install pip and boto3
          command: |
            pip3 install boto3 requests
      - run:
          name: Start ECS tasks
          command: |
            cd testnet-kitchen/src/simulation
            ./run_simulation.py

workflows:
  version: 2
  ecs_testnet_deployment:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master

  gaia_simulation:
    jobs:
      - build_gaia_sim_image:
          filters:
            branches:
              only:
                - simulation
      - run_simulation:
          filters:
            branches:
              only:
                - simulation
          requires:
            - build_gaia_sim_image
  
  tools_test_suite:
    jobs:
      - tools_setup_dependencies
      - tools_lint:
          requires:
            - tools_setup_dependencies
      - tools_test:
          requires:
            - tools_setup_dependencies
